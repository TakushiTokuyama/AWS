Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t1.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: "AWS::EC2::KeyPair::KeyName"
  AMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
Resources:
  # Create Vpc
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/21
      EnableDnsHostnames: "false"
      EnableDnsSupport: "true"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: VPC

  # Create Subnet
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "ap-northeast-1a"
      Tags:
        - Key: Name
          Value: Subnet

  # Create InternetGateway
  InternetGateWay:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  # Attach InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateWay
      VpcId:
        Ref: VPC

  # Create RouteTable
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: RouteTable

  # Attach RouteTable to Subnet
  EntranceRouteTableToSubnet:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet
      RouteTableId:
        Ref: RouteTable

  # Attach RouteTable to InternetGateway
  EntranceRouteTableToInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      GatewayId:
        Ref: InternetGateWay
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0

  # Create NetworkACL
  NetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - key: Name
          Value: NetworkACL

  # Create NetworkACL InboundRule
  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      CidrBlock: 10.0.0.0/24
      PortRange:
        From: 22
        To: 22

  # Create NetWorkACL OutBoundRule
  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkACL
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  # Create NetworkACL to Subnet
  EntranceNetworkACLToSubnet:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: NetworkACL
      SubnetId:
        Ref: Subnet

  # Create ScurityGroup
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "salesManagementApp"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  # Create EC2Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIID
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: SecurityGroup
      SubnetId:
        Ref: Subnet
      Tags:
        - Key: Name
          Value: EC2Instance

  # Create NetWorkInterface
  NetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Tags:
        - Key: Name
          Value: NetworkInterface
      SourceDestCheck: "false"
      GroupSet:
        Ref: SecurityGroup
      SubnetId:
        Ref: Subnet
      PrivateIpAddress: 10.0.0.16

  # Attach NetworkInterface
  NetworkInterfaceAttachment:
    Type: AWS::EC2::NetworkInterfaceAttachment
    Properties:
      InstanceId:
        Ref: EC2Instance
      NetworkInterfaceId:
        Ref: NetworkInterface
      DeviceIndex: 1
